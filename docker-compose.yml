version: '3'
services:
  nginx:
    image: nginx:1.15.2-alpine
    restart: always
    ports:
      - "80:80"
      - "4433:4433"
      - "5124:5124"
    volumes:
      - ./backend/conf/nginx:/etc/nginx/conf.d:ro
      - ${WOLFPACK_ROOT:-./backend/retro/flask}/static:/usr/share/nginx/html:ro
      - ${WOLFPACK_ROOT:-./backend}/conf/certs:/etc/ssl:ro
    depends_on:
      - api
      - websocket
  api:
    build:
        context: ./backend/
        dockerfile: Dockerfile.api
    restart: always
    depends_on:
      - redis
      - mongodb
    volumes:
      - ~/.aws:/root/.aws:ro
    ports:
      - "8880:8880"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - TEMPLATE_CONFIG=/usr/src/app/conf/templates.cfg
  websocket:
    build:
        context: ./backend/
        dockerfile: Dockerfile.websocket
    restart: always
    depends_on:
      - redis
    ports:
      - "4215:4215"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
  redis:
    image: redis:4-alpine
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    restart: always
    volumes:
      - ./backend/conf/redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ${WOLFPACK_ROOT:-./backend}/redis-data:/data
    ports:
      - "6379:6379"
  mongodb:
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ${WOLFPACK_ROOT:-./backend}/mongo-data:/data/db
